{
  "name": "commandline-parser",
  "version": "0.4.0",
  "description": "A commandline parser tool for node.js",
  "main": "./lib/Parser",
  "repository": {
    "type": "git",
    "url": "git@github.com:arieh/CommandParser.git"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "scripts": {
    "test": "mocha ./test/ParserSpec.js"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "Commandline Parser\n============\n\nCommandParser is a simple tool for parsing our commandline arguments, and printing help text for them.\n\n## Installation\n\n`npm install commandline-parser`\n\n## Usage\n\n### Registering arguments\n```js\nvar CommandLine = require('commandline-parser').Parser,\n\tparser = new Parser({\n\t\tname : \"command\",\n\t\tdesc : 'Description',\n\t\textra : 'Extra text'\n\t});\n\n//simplest form\nparser.addArgument('foo', 'assign a value to foo');\n\n//with all arguments\nparser.addArgument('bar' ,{\n\tflags : ['b','bar'], //default is name\n\tdesc : \"assign a value to bar\", //default is ''\n\toptional : false //default is true,\n\taction : function(value, parser){}\n});\n```\n### Printing help text\n\n```js\nparser.printHelp();\n\n/*\n\tHelp for command\n\n\tDescription\n\n\t--foo      assign a value to foo\n\t-h, --help help\n\t-b, --bar  assign a value to bar\n\n\tExtra text\n*/\n```\n\nAlso note, that the parser already pre-registers the `-h` and `--help` commands for the `printHelp` method\n\n\n### Parsing arguments\n\n```js\n//for the following command:\n//$: Command --foo='a' -b a.js b.js\n\nparser.get('foo');//a\nparser.get('bar');//true\nparser.getArguments();//['a.js','b.js']\n\n\n//If we want to test which required arguments are missing we can use\nparser.isAnythingMissing();//returns an array of missing parameters\n```\n\n### Registering actions\nYou can use the parser to route arguments to functions:\n\n```js\nparser.registerActions({\n\tfoo : function(value, parser){\n\t\tconsole.log('Foo was set with the value of ', value);\n\t}\n});\n\nparser.exec();//will execute all actions that have values assigned to them\n```\n\n## Full constructor options:\n\n```js\nparser  new Parser({\n\tname : \"command\",\n\tdesc : 'Description',\n\textra : 'Extra text',\n\targuments : {\n\t\tfoo : {\n\t\t\tflags : ['f'],\n\t\t\toptional : false,\n\t\t\tdesc : 'description of command',\n\t\t\taction : function(value, parser){}\n\t\t}\n\t}\n});\n\n```\n\n## An example of all possible argument assignments\n\n```js\n$: cmd -a -bcd -e aaa -fgh bbb --foo --bar=ccc ddd eee\n\n/*\na:true\nb:true\nc:true\ne:\"aaa\"\nf:true\ng:true\nh:\"bbb\"\nfoo:tue\nbar:ccc\ngetArguments:[\"ddd\",\"eee\"]\n*/\n```",
  "_id": "commandline-parser@0.4.0",
  "dist": {
    "shasum": "bfd4ce83745db4a9536fca0fc2c1936013abdbbe",
    "tarball": "http://registry.npmjs.org/commandline-parser/-/commandline-parser-0.4.0.tgz"
  },
  "_from": "commandline-parser@",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "arieh",
    "email": "arieh@glzr.co.il"
  },
  "maintainers": [
    {
      "name": "arieh",
      "email": "arieh@glzr.co.il"
    }
  ],
  "directories": {},
  "_shasum": "bfd4ce83745db4a9536fca0fc2c1936013abdbbe",
  "_resolved": "https://registry.npmjs.org/commandline-parser/-/commandline-parser-0.4.0.tgz"
}
